generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Apps {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([name], name: "index_apps_on_name")
}

model Apps_users {
  id          Int     @id @default(autoincrement())
  userId      BigInt
  appId       BigInt
  @@index([appId, userId], name: "index_apps_users_on_app_id_and_user_id")
  @@index([userId, appId], name: "index_apps_users_on_user_id_and_app_id")
}

model Channels {
  id          Int     @id @default(autoincrement())
  schemeId    BigInt?
  name        String
  slug        String @unique
  bundleId    String @default("*")
  deviceType  String
  gitUrl      String?
  password    String?
  key         String?
  @@index([bundleId], name: "index_channels_on_bundle_id")
  @@index([deviceType], name: "index_channels_on_device_type")
  @@index([name], name: "index_channels_on_name")
  @@index([schemeId, deviceType], name: "index_channels_on_scheme_id_and_device_type")
  @@index([slug], name: "index_channels_on_slug")
}

model Releases {
  id          Int     @id @default(autoincrement())
  channelId   BigInt?
  bundleId    String
  version     Int
  releaseVersion String
  buildVersion String
  releseType  String?
  source      String?
  branch      String?
  gitCommit   String?
  icon        String?
  ciUrl       String?
  changelog   String?
  file        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String?
  deviceType  String?
  @@index([buildVersion], name: "index_releases_on_build_version")
  @@index([bundleId], name: "index_releases_on_bundle_id")
  @@index([channelId, version], name: "index_releases_on_channel_id_and_version")
  @@index([releseType], name: "index_releases_on_release_type")
  @@index([releaseVersion, buildVersion], name: "index_releases_on_release_version_and_build_version")
  @@index([source], name: "index_releases_on_source")
  @@index([version], name: "index_releases_on_version")
}

model Schemes {
  id          Int     @id @default(autoincrement())
  appId       BigInt
  name        String
  @@index([appId], name: "index_schemes_on_app_id")
  @@index([name], name: "index_schemes_on_name")
}

model Settings {
  id          Int     @id @default(autoincrement())
  key         String
  value       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([key], name: "index_settings_on_key")
}

model Account {
  id                 Int     @id @default(autoincrement())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  idToken            String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
